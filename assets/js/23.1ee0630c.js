(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{495:function(t,a,e){"use strict";e.r(a);var s=e(41),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"java集合框架结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java集合框架结构"}},[t._v("#")]),t._v(" Java 集合框架结构")]),t._v(" "),e("p",[t._v("Java 集合主要分为两块 Collection 和 Map，Collection 接口主要有三个子接口：List, Set, Queue。"),e("a",{attrs:{href:"https://pierrchen.blogspot.com/2014/03/java-collections-framework-cheat-sheet.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/byc996/picb/image-20230429134431868.png",alt:"image-20230429134431868"}})]),t._v(" "),e("h2",{attrs:{id:"collection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#collection"}},[t._v("#")]),t._v(" Collection")]),t._v(" "),e("p",[t._v("集合接口的方法：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/byc996/picb/image-20230429135308570.png",alt:"image-20230429135308570"}})]),t._v(" "),e("h3",{attrs:{id:"list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[t._v("#")]),t._v(" List")]),t._v(" "),e("ul",[e("li",[t._v("ArrayList：基于数组实现，可以随机访问 O (1)。插入，删除元素复杂度高 O (n)，非线程安全。")]),t._v(" "),e("li",[t._v("LinkedList：基于双向链表实现，可以快速插入和删除元素 O (1)，访问元素复杂度高 O (n)，非线程安全。")]),t._v(" "),e("li",[t._v("Vector：与 ArrayList 类似，但是线程安全，所有需要保证线程安全的方法都添加了 synchronized 关键字。")])]),t._v(" "),e("h3",{attrs:{id:"set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),e("ul",[e("li",[t._v("HashSet：基于哈希表实现，可以快速查找元素 O (1)，"),e("strong",[t._v("无序")]),t._v("，非线程安全。")]),t._v(" "),e("li",[t._v("LinkedHashSet：基于哈希表和链表实现，可以快速查找元素 O (1)， "),e("strong",[t._v("有序")]),t._v("，非线程安全。")]),t._v(" "),e("li",[t._v("TreeSet：基于红黑树实现，查找元素复杂度 O (logN)，有序，非线程安全。")])]),t._v(" "),e("h3",{attrs:{id:"queue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#queue"}},[t._v("#")]),t._v(" Queue")]),t._v(" "),e("ul",[e("li",[t._v("LinkedList：基于双向链表实现，可以快速插入和删除元素 O (1)，访问元素复杂度高 O (n)，非线程安全。")]),t._v(" "),e("li",[t._v("PriorityQueue：基于堆实现，元素操作复杂度 O (logn) 或 O (n)，非线程安全。")])]),t._v(" "),e("h2",{attrs:{id:"map"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),e("p",[t._v("Map 接口的方法：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/byc996/picb/image-20230429135544176.png",alt:"image-20230429135544176"}})]),t._v(" "),e("p",[t._v("Map 常用实现类：")]),t._v(" "),e("ul",[e("li",[t._v("HashMap：基于哈希表实现，无序，非线程安全。")]),t._v(" "),e("li",[t._v("LinkedHashMap：基于哈希表和链表实现，有序，非线程安全。")]),t._v(" "),e("li",[t._v("HashTable：与 HashMap 类似，无序，但是线程安全。")]),t._v(" "),e("li",[t._v("TreeMap：基于红黑树实现，有序，非线程安全。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);